# Generated by Django 5.1.6 on 2025-02-21 16:56

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('matricule', models.CharField(max_length=50, unique=True)),
                ('nom', models.CharField(max_length=255)),
                ('ifu', models.CharField(blank=True, max_length=13, null=True, unique=True)),
                ('typeClient', models.CharField(max_length=20)),
                ('aibType', models.CharField(default='N', max_length=1)),
                ('tauxAIB', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('contact', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('adresse', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EMECeFToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('token', models.TextField()),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('matricule', models.CharField(max_length=50, unique=True)),
                ('nom', models.CharField(max_length=255)),
                ('prenoms', models.CharField(max_length=255)),
                ('dateNais', models.DateField()),
                ('lieuNais', models.CharField(max_length=255)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('poste', models.CharField(max_length=255)),
                ('dateEmbauche', models.DateField()),
                ('salaireMensuel', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('codeFacture', models.CharField(max_length=50, unique=True)),
                ('dateEmissionPF', models.DateField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('en_attente', 'En Attente'), ('accompte_payee', 'Accompte Payee'), ('payee', 'Payee'), ('annulee', 'Annulee')], default='en_attente', max_length=20)),
                ('modePaiement', models.CharField(choices=[('cash', 'Cash'), ('par_tranche', 'Par Tranche'), ('credit', 'Cr√©dit')], default='cash', max_length=20)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FactureNormaliser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('codeNorm', models.CharField(max_length=50, unique=True)),
                ('montantTotalHT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('montantTotalTTC', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dateEmissionDGI', models.DateField(blank=True, null=True)),
                ('dateNormalisationDGI', models.DateField(blank=True, null=True)),
                ('DGIstatut', models.CharField(choices=[('en_attente', 'En Attente de soumission'), ('soumise', 'Soumise √† la DGI'), ('validee', 'Valid√©e par la DGI'), ('rejetee', 'Rejet√©e par la DGI')], default='en_attente', max_length=20)),
                ('paiements', models.CharField(blank=True, max_length=100)),
                ('code_mecfDGI', models.CharField(blank=True, max_length=29, null=True, unique=True)),
                ('qr_code', models.CharField(blank=True, max_length=66, null=True, unique=True)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('facture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facture_a_normaliser', to='api.facture')),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FicheDePaie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('codeFiche', models.CharField(max_length=50, unique=True)),
                ('mois', models.CharField(max_length=20)),
                ('montantPaye', models.DecimalField(decimal_places=2, max_digits=10)),
                ('datePaiement', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.employe')),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('codeReservation', models.CharField(max_length=50, unique=True)),
                ('dateAdd', models.DateField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('statut', models.CharField(default='en attente', max_length=20)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='facture',
            name='reservation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.reservation'),
        ),
        migrations.CreateModel(
            name='Revenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('month', models.CharField(max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('nomService', models.CharField(max_length=255)),
                ('descriptionService', models.TextField(blank=True)),
                ('PU', models.DecimalField(decimal_places=2, max_digits=10)),
                ('statut', models.BooleanField(default=True)),
                ('taxe', models.CharField(choices=[('A', 'Exon√©r√©'), ('B', 'Taxable (18%)'), ('C', 'Exportation (0%)'), ('D', 'TVA r√©gime d‚Äôexception (18%)'), ('E', 'R√©gime fiscal TPS'), ('F', 'R√©serv√©')], default='B', max_length=1)),
                ('tauxTaxe', models.DecimalField(decimal_places=2, default=18.0, help_text='Le taux de TVA ou de taxe associ√© au service', max_digits=5)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LigneFacture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('qte', models.PositiveIntegerField()),
                ('prixHT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prixTTC', models.DecimalField(decimal_places=2, max_digits=10)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('facture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes_factures', to='api.facture')),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('nomStudio', models.CharField(max_length=255)),
                ('descriptionStudio', models.TextField(blank=True)),
                ('statut', models.BooleanField(default=True)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Crenau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('dateDeb', models.DateField()),
                ('dateFin', models.DateField()),
                ('heureDeb', models.TimeField()),
                ('heureFin', models.TimeField()),
                ('notes', models.TextField(blank=True)),
                ('statut', models.CharField(default='en attente', max_length=20)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crenau_reservation', to='api.reservation')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.service')),
                ('studio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.studio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('codeTransaction', models.CharField(max_length=50, unique=True)),
                ('montantPaye', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('typeTransac', models.CharField(choices=[('ESPECES', 'ESPECES'), ('VIREMENT', 'VIREMENT'), ('CARTEBANCAIRE', 'CARTEBANCAIRE'), ('MOBILEMONEY', 'MOBILEMONEY'), ('CHEQUE', 'CHEQUE'), ('AUTRE', 'AUTRE')], default='ESPECES', max_length=50)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('facture', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='api.facture')),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Recu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('deleteAt', models.DateTimeField(blank=True, null=True)),
                ('codeRecu', models.CharField(max_length=50, unique=True)),
                ('dateEmission', models.DateField(auto_now_add=True)),
                ('createBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleteBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updateBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.transaction')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
